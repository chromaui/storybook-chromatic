{"version":3,"sources":["../../src/assets/configure.js"],"names":["location","pathname","match","jest","console","error","runtime","options","renderSpec","specRuntime","story","name","kind","component","window","__STORYBOOK_CLIENT_API__","__STORYBOOK_ADDONS_CHANNEL__","Error","channel","toId","resolve","reject","on","document","getElementById","emit","storyId","_handleEvent","type","args","from","body","classList","contains","message","textContent","stack","specs","storyStore","_storyStore","getStorybook","map","stories","parameters","getStoryAndParameters","chromatic","viewports","delay","disable","noScroll","displayName","split","slice","reduce","a","b"],"mappings":"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","file":"configure.js","sourcesContent":["/* eslint-env browser */\n/* eslint-disable import/no-extraneous-dependencies, global-require */\n\nimport { toId } from '@storybook/core/client';\n\nimport configure from '../client';\n\nif (!location.pathname.match('/iframe.html') && typeof jest === 'undefined') {\n  console.error(`storybook-chromatic should be installed in your \\`.storybook/config.js\\``);\n}\n\nconst runtime = 'storybook';\nexport default (options = {}) =>\n  configure({\n    runtime,\n    async renderSpec({ runtime: specRuntime, name: story, component: { name: kind } }) {\n      const { __STORYBOOK_CLIENT_API__, __STORYBOOK_ADDONS_CHANNEL__ } = window;\n\n      if (!__STORYBOOK_CLIENT_API__ || !__STORYBOOK_ADDONS_CHANNEL__) {\n        throw new Error(\n          `Chromatic requires Storybook version at least 3.4. Please update your storybook!`\n        );\n      }\n\n      if (specRuntime !== runtime) {\n        throw new Error(`Storybook plugin cannot handle ${specRuntime} specs`);\n      }\n\n      const channel = __STORYBOOK_ADDONS_CHANNEL__;\n\n      // In storybook 5+ we can be sure of the emitting, and we need to use a storyId API\n      if (toId) {\n        return new Promise((resolve, reject) => {\n          channel.on('storyRendered', () => resolve(document.getElementById('root')));\n          channel.on('storyUnchanged', () => resolve(document.getElementById('root')));\n          channel.on('storyErrored', error => reject(error));\n          channel.on('storyThrewException', error => reject(error));\n\n          channel.emit('setCurrentStory', { storyId: toId(kind, story) });\n        });\n      }\n\n      // We need to emulate the event sent by the manager to the preview.\n      // In SB@4+ if we emit a message on the channel it will get picked up by the preview\n      // (note that we are on the preview side). However, in SB@3.4, perhaps more correctly,\n      // if we emit a message, it won't be picked up by the preview. So we need to reach\n      // in and simulate receiving an event\n      // eslint-disable-next-line no-underscore-dangle\n      channel._handleEvent({\n        type: 'setCurrentStory',\n        args: [{ kind, story }],\n        from: 'chromatic',\n      });\n\n      // If the story has rendered with an error, SB does not return any kind of error\n      // (we will fix this...) However, in the meantime, you can pick this up via a class on the body\n      if (document.body.classList.contains('sb-show-errordisplay')) {\n        const message = document.getElementById('error-message').textContent;\n        const stack = document.getElementById('error-stack').textContent;\n        const error = new Error(message);\n        error.stack = stack;\n        throw error;\n      }\n\n      return document.getElementById('root');\n    },\n    specs() {\n      const { __STORYBOOK_CLIENT_API__, __STORYBOOK_ADDONS_CHANNEL__ } = window;\n\n      if (!__STORYBOOK_CLIENT_API__ || !__STORYBOOK_ADDONS_CHANNEL__) {\n        throw new Error(\n          `Chromatic requires Storybook version at least 3.4. Please update your storybook!`\n        );\n      }\n\n      // eslint-disable-next-line no-underscore-dangle\n      const storyStore = __STORYBOOK_CLIENT_API__._storyStore;\n\n      return __STORYBOOK_CLIENT_API__\n        .getStorybook()\n        .map(({ kind, stories }) =>\n          stories.map(({ name }) => {\n            let parameters;\n            if (storyStore.getStoryAndParameters) {\n              // Annoying to have to do this, we should support this in .getStorybook\n              const { parameters: { chromatic } } = storyStore.getStoryAndParameters(kind, name);\n              if (chromatic) {\n                const { viewports, delay, disable, noScroll } = chromatic;\n                parameters = {\n                  ...(viewports && { viewports }),\n                  ...(delay && { delay }),\n                  ...(disable && { disable }),\n                  ...(noScroll && { noScroll }),\n                };\n              }\n            }\n\n            return {\n              name,\n              component: {\n                name: kind,\n                displayName: kind.split('/').slice(-1)[0],\n              },\n              runtime,\n              parameters,\n            };\n          })\n        )\n        .reduce((a, b) => [...a, ...b], []); // flatten\n    },\n    ...options,\n  });\n"]}