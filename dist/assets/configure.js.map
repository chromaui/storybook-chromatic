{"version":3,"sources":["../../src/assets/configure.js"],"names":["location","pathname","match","jest","console","error","runtime","options","renderSpec","specRuntime","story","name","kind","component","window","__STORYBOOK_CLIENT_API__","__STORYBOOK_ADDONS_CHANNEL__","Error","_handleEvent","type","args","from","document","body","classList","contains","message","getElementById","textContent","stack","specs","storyStore","_storyStore","getStorybook","map","stories","parameters","getStoryAndParameters","chromatic","viewports","delay","displayName","split","slice","reduce","a","b"],"mappings":"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","file":"configure.js","sourcesContent":["/* eslint-env browser */\n/* eslint-disable import/no-extraneous-dependencies, global-require */\n\nimport configure from '../client';\n\nif (!location.pathname.match('/iframe.html') && typeof jest === 'undefined') {\n  console.error(`storybook-chromatic should be installed in your \\`.storybook/config.js\\``);\n}\n\nconst runtime = 'storybook';\nexport default (options = {}) =>\n  configure({\n    runtime,\n    renderSpec({ runtime: specRuntime, name: story, component: { name: kind } }) {\n      const { __STORYBOOK_CLIENT_API__, __STORYBOOK_ADDONS_CHANNEL__ } = window;\n\n      if (!__STORYBOOK_CLIENT_API__ || !__STORYBOOK_ADDONS_CHANNEL__) {\n        throw new Error(\n          `Chromatic requires Storybook version at least 3.4. Please update your storybook!`\n        );\n      }\n\n      if (specRuntime !== runtime) {\n        throw new Error(`Storybook plugin cannot handle ${specRuntime} specs`);\n      }\n\n      // We need to emulate the event sent by the manager to the preview.\n      // In SB@4+ if we emit a message on the channel it will get picked up by the preview\n      // (note that we are on the preview side). However, in SB@3.4, perhaps more correctly,\n      // if we emit a message, it won't be picked up by the preview. So we need to reach\n      // in and simulate receiving an event\n      // eslint-disable-next-line no-underscore-dangle\n      __STORYBOOK_ADDONS_CHANNEL__._handleEvent({\n        type: 'setCurrentStory',\n        args: [{ kind, story }],\n        from: 'chromatic',\n      });\n\n      // If the story has rendered with an error, SB does not return any kind of error\n      // (we will fix this...) However, in the meantime, you can pick this up via a class on the body\n      if (document.body.classList.contains('sb-show-errordisplay')) {\n        const message = document.getElementById('error-message').textContent;\n        const stack = document.getElementById('error-stack').textContent;\n        const error = new Error(message);\n        error.stack = stack;\n        throw error;\n      }\n\n      return document.getElementById('root');\n    },\n    specs() {\n      const { __STORYBOOK_CLIENT_API__, __STORYBOOK_ADDONS_CHANNEL__ } = window;\n\n      if (!__STORYBOOK_CLIENT_API__ || !__STORYBOOK_ADDONS_CHANNEL__) {\n        throw new Error(\n          `Chromatic requires Storybook version at least 3.4. Please update your storybook!`\n        );\n      }\n\n      // eslint-disable-next-line no-underscore-dangle\n      const storyStore = __STORYBOOK_CLIENT_API__._storyStore;\n\n      return __STORYBOOK_CLIENT_API__\n        .getStorybook()\n        .map(({ kind, stories }) =>\n          stories.map(({ name }) => {\n            let parameters;\n            if (storyStore.getStoryAndParameters) {\n              // Annoying to have to do this, we should support this in .getStorybook\n              const { parameters: { chromatic } } = storyStore.getStoryAndParameters(kind, name);\n              if (chromatic) {\n                const { viewports, delay } = chromatic;\n                parameters = {\n                  ...(viewports && { viewports }),\n                  ...(delay && { delay }),\n                };\n              }\n            }\n\n            return {\n              name,\n              component: {\n                name: kind,\n                displayName: kind.split('/').slice(-1)[0],\n              },\n              runtime,\n              parameters,\n            };\n          })\n        )\n        .reduce((a, b) => [...a, ...b], []); // flatten\n    },\n    ...options,\n  });\n"]}