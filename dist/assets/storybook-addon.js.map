{"version":3,"sources":["../../src/assets/storybook-addon.js"],"names":["location","pathname","match","jest","console","error","runtime","renderSpec","specRuntime","story","name","kind","component","window","__STORYBOOK_CLIENT_API__","__STORYBOOK_ADDONS_CHANNEL__","Error","_handleEvent","type","args","from","document","body","classList","contains","message","getElementById","textContent","stack","specs","storyStore","_storyStore","getStorybook","map","stories","parameters","getStoryAndParameters","chromatic","viewports","delay","displayName","split","slice","reduce","a","b"],"mappings":"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","file":"storybook-addon.js","sourcesContent":["/* eslint-env browser */\n/* eslint-disable import/no-extraneous-dependencies, global-require */\n\nimport configure from '../client';\n\nif (!location.pathname.match('/iframe.html') && typeof jest === 'undefined') {\n  console.error(`storybook-chromatic should be installed in your \\`.storybook/config.js\\``);\n}\n\nconst runtime = 'storybook';\nconfigure({\n  runtime,\n  renderSpec({ runtime: specRuntime, name: story, component: { name: kind } }) {\n    const { __STORYBOOK_CLIENT_API__, __STORYBOOK_ADDONS_CHANNEL__ } = window;\n\n    if (!__STORYBOOK_CLIENT_API__ || !__STORYBOOK_ADDONS_CHANNEL__) {\n      throw new Error(\n        `Chromatic requires Storybook version at least 3.4. Please update your storybook!`\n      );\n    }\n\n    if (specRuntime !== runtime) {\n      throw new Error(`Storybook plugin cannot handle ${specRuntime} specs`);\n    }\n\n    // We need to emulate the event sent by the manager to the preview.\n    // In SB@4+ if we emit a message on the channel it will get picked up by the preview\n    // (note that we are on the preview side). However, in SB@3.4, perhaps more correctly,\n    // if we emit a message, it won't be picked up by the preview. So we need to reach\n    // in and simulate receiving an event\n    // eslint-disable-next-line no-underscore-dangle\n    __STORYBOOK_ADDONS_CHANNEL__._handleEvent({\n      type: 'setCurrentStory',\n      args: [{ kind, story }],\n      from: 'chromatic',\n    });\n\n    // If the story has rendered with an error, SB does not return any kind of error\n    // (we will fix this...) However, in the meantime, you can pick this up via a class on the body\n    if (document.body.classList.contains('sb-show-errordisplay')) {\n      const message = document.getElementById('error-message').textContent;\n      const stack = document.getElementById('error-stack').textContent;\n      const error = new Error(message);\n      error.stack = stack;\n      throw error;\n    }\n\n    return document.getElementById('root');\n  },\n  specs() {\n    const { __STORYBOOK_CLIENT_API__, __STORYBOOK_ADDONS_CHANNEL__ } = window;\n\n    if (!__STORYBOOK_CLIENT_API__ || !__STORYBOOK_ADDONS_CHANNEL__) {\n      throw new Error(\n        `Chromatic requires Storybook version at least 3.4. Please update your storybook!`\n      );\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    const storyStore = __STORYBOOK_CLIENT_API__._storyStore;\n\n    return __STORYBOOK_CLIENT_API__\n      .getStorybook()\n      .map(({ kind, stories }) =>\n        stories.map(({ name }) => {\n          let parameters;\n          if (storyStore.getStoryAndParameters) {\n            // Annoying to have to do this, we should support this in .getStorybook\n            const { parameters: { chromatic } } = storyStore.getStoryAndParameters(kind, name);\n            if (chromatic) {\n              const { viewports, delay } = chromatic;\n              parameters = {\n                ...(viewports && { viewports }),\n                ...(delay && { delay }),\n              };\n            }\n          }\n\n          return {\n            name,\n            component: {\n              name: kind,\n              displayName: kind.split('/').slice(-1)[0],\n            },\n            runtime,\n            parameters,\n          };\n        })\n      )\n      .reduce((a, b) => [...a, ...b], []); // flatten\n  },\n});\n"]}