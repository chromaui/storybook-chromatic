{"version":3,"sources":["../../src/bin/chromatic-test.test.js"],"names":["origConsole","beforeAll","global","console","log","jest","fn","afterAll","mock","CHROMATIC_CREATE_TUNNEL","CHROMATIC_APP_CODE","readFileSync","scripts","storybook","otherStorybook","notStorybook","otherBuildStorybook","process","env","it","expect","toMatchObject","appCode","buildScriptName","noStart","fromCI","autoAcceptChanges","undefined","exitZeroOnChanges","interactive","verbose","createTunnel","originalArgv","scriptName","url","toThrow","exec","describe","port","toBe"],"mappings":";;AAAA;;AAEA,IAAIA,WAAJ;AACAC,SAAS,CAAC,YAAM;AACdD,EAAAA,WAAW,GAAGE,MAAM,CAACC,OAArB;AACAD,EAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,IAAAA,GAAG,EAAEC,IAAI,CAACC,EAAL;AADU,GAAjB;AAGD,CALQ,CAAT;AAMAC,QAAQ,CAAC,YAAM;AACbL,EAAAA,MAAM,CAACC,OAAP,GAAiBH,WAAjB;AACD,CAFO,CAAR;AAIAK,IAAI,CAACG,IAAL,CAAU,uBAAV,EAAmC;AAAA,SAAO;AACxCC,IAAAA,uBAAuB,EAAE,IADe;AAExCC,IAAAA,kBAAkB,EAAE;AAFoB,GAAP;AAAA,CAAnC;AAKAL,IAAI,CAACG,IAAL,CAAU,UAAV,EAAsB;AAAA,SAAO;AAC3BG,IAAAA,YAAY,EAAE;AAAA,aAAO;AACnBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,SAAS,EAAE,yBADJ;AAEPC,UAAAA,cAAc,EAAE,yBAFT;AAGPC,UAAAA,YAAY,EAAE,MAHP;AAIP,6BAAmB,iBAJZ;AAKPC,UAAAA,mBAAmB,EAAE;AALd;AADU,OAAP;AAAA;AADa,GAAP;AAAA,CAAtB;AAYAC,OAAO,CAACC,GAAR,CAAYR,kBAAZ,GAAiC,MAAjC;AAEAS,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACnCC,EAAAA,MAAM,CAAC,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,YAA3B,EAAyC,UAAzC,CAAV,CAAD,CAAN,CAAwEC,aAAxE,CAAsF;AACpFC,IAAAA,OAAO,EAAE,UAD2E;AAEpFC,IAAAA,eAAe,EAAE,iBAFmE;AAGpFC,IAAAA,OAAO,EAAE,IAH2E;AAIpFC,IAAAA,MAAM,EAAE,KAJ4E;AAKpFC,IAAAA,iBAAiB,EAAEC,SALiE;AAMpFC,IAAAA,iBAAiB,EAAED,SANiE;AAOpFE,IAAAA,WAAW,EAAE,IAPuE;AAQpFC,IAAAA,OAAO,EAAE,KAR2E;AASpFC,IAAAA,YAAY,EAAE,IATsE;AAUpFC,IAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,gBAAT,EAA2B,YAA3B,EAAyC,UAAzC;AAVsE,GAAtF;AAYD,CAbC,CAAF;AAeAb,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7CC,EAAAA,MAAM,CAAC,8BAAU,CAAC,MAAD,EAAS,gBAAT,CAAV,CAAD,CAAN,CAA8CC,aAA9C,CAA4D;AAC1DC,IAAAA,OAAO,EAAE;AADiD,GAA5D;AAGD,CAJC,CAAF;AAMAH,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAC9DC,EAAAA,MAAM,CACJ,8BAAU,CACR,MADQ,EAER,gBAFQ,EAGR,MAHQ,EAIR,gBAJQ,EAKR,uBALQ,EAMR,wBANQ,EAOR,SAPQ,EAQR,kBARQ,CAAV,CADI,CAAN,CAWEC,aAXF,CAWgB;AACdG,IAAAA,OAAO,EAAE,IADK;AAEdC,IAAAA,MAAM,EAAE,IAFM;AAGdC,IAAAA,iBAAiB,EAAE,IAHL;AAIdE,IAAAA,iBAAiB,EAAE,IAJL;AAKdE,IAAAA,OAAO,EAAE,IALK;AAMdD,IAAAA,WAAW,EAAE,KANC;AAOdE,IAAAA,YAAY,EAAE;AAPA,GAXhB;AAoBD,CArBC,CAAF;AAuBAZ,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxCC,EAAAA,MAAM,CAAC,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,IAA3B,CAAV,CAAD,CAAN,CAAoDC,aAApD,CAAkE;AAChEY,IAAAA,UAAU,EAAE,WADoD;AAEhEC,IAAAA,GAAG,EAAE,mCAF2D;AAGhEV,IAAAA,OAAO,EAAE;AAHuD,GAAlE;AAKD,CANC,CAAF;AAQAL,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACvDC,EAAAA,MAAM,CACJ,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,qBAA3B,EAAkD,qBAAlD,CAAV,CADI,CAAN,CAEEC,aAFF,CAEgB;AACdE,IAAAA,eAAe,EAAE;AADH,GAFhB;AAKD,CANC,CAAF;AAQAJ,EAAE,CAAC,6DAAD,EAAgE,YAAM;AACtEC,EAAAA,MAAM,CAAC,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,eAA3B,EAA4C,gBAA5C,CAAV,CAAD,CAAN,CAAiFC,aAAjF,CAA+F;AAC7FY,IAAAA,UAAU,EAAE,gBADiF;AAE7FC,IAAAA,GAAG,EAAE,mCAFwF;AAG7FV,IAAAA,OAAO,EAAE;AAHoF,GAA/F;AAKD,CANC,CAAF;AAQAL,EAAE,CAAC,wFAAD,EAA2F,YAAM;AACjGC,EAAAA,MAAM,CACJ,8BAAU,CACR,MADQ,EAER,gBAFQ,EAGR,eAHQ,EAIR,cAJQ,EAKR,kBALQ,EAMR,MANQ,CAAV,CADI,CAAN,CASEC,aATF,CASgB;AACdY,IAAAA,UAAU,EAAE,cADE;AAEdC,IAAAA,GAAG,EAAE;AAFS,GAThB;AAaD,CAdC,CAAF;AAgBAf,EAAE,CAAC,4FAAD,EAA+F,YAAM;AACrGC,EAAAA,MAAM,CAAC;AAAA,WAAM,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,eAA3B,EAA4C,cAA5C,CAAV,CAAN;AAAA,GAAD,CAAN,CAAqFe,OAArF,CACE,kBADF;AAGD,CAJC,CAAF;AAMAhB,EAAE,CAAC,yDAAD,EAA4D,YAAM;AAClEC,EAAAA,MAAM,CACJ,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,QAA3B,EAAqC,mBAArC,EAA0D,kBAA1D,EAA8E,MAA9E,CAAV,CADI,CAAN,CAEEC,aAFF,CAEgB;AACde,IAAAA,IAAI,EAAE,mBADQ;AAEdF,IAAAA,GAAG,EAAE;AAFS,GAFhB;AAMD,CAPC,CAAF;AASAf,EAAE,CAAC,qEAAD,EAAwE,YAAM;AAC9EC,EAAAA,MAAM,CAAC;AAAA,WAAM,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,QAA3B,EAAqC,mBAArC,CAAV,CAAN;AAAA,GAAD,CAAN,CAAmFe,OAAnF,CACE,kBADF;AAGD,CAJC,CAAF;AAMAhB,EAAE,CAAC,8DAAD,EAAiE,YAAM;AACvEC,EAAAA,MAAM,CAAC;AAAA,WACL,8BAAU,CACR,MADQ,EAER,gBAFQ,EAGR,QAHQ,EAIR,mBAJQ,EAKR,iBALQ,EAMR,gBANQ,CAAV,CADK;AAAA,GAAD,CAAN,CASEe,OATF,CASU,6CATV;AAWAf,EAAAA,MAAM,CAAC;AAAA,WACL,8BAAU,CACR,MADQ,EAER,gBAFQ,EAGR,eAHQ,EAIR,WAJQ,EAKR,iBALQ,EAMR,gBANQ,CAAV,CADK;AAAA,GAAD,CAAN,CASEe,OATF,CASU,oDATV;AAUD,CAtBC,CAAF;AAwBAhB,EAAE,CAAC,uEAAD,EAA0E,YAAM;AAChFC,EAAAA,MAAM,CAAC;AAAA,WAAM,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,QAA3B,EAAqC,mBAArC,EAA0D,IAA1D,CAAV,CAAN;AAAA,GAAD,CAAN,CAAyFe,OAAzF,CACE,iDADF;AAIAf,EAAAA,MAAM,CAAC;AAAA,WAAM,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,eAA3B,EAA4C,WAA5C,EAAyD,IAAzD,CAAV,CAAN;AAAA,GAAD,CAAN,CAAwFe,OAAxF,CACE,wDADF;AAGD,CARC,CAAF;AAUAhB,EAAE,CAAC,oEAAD,EAAuE,YAAM;AAC7EC,EAAAA,MAAM,CAAC;AAAA,WACL,8BAAU,CACR,MADQ,EAER,gBAFQ,EAGR,QAHQ,EAIR,mBAJQ,EAKR,uBALQ,EAMR,UANQ,CAAV,CADK;AAAA,GAAD,CAAN,CASEe,OATF,CASU,mDATV;AAWAf,EAAAA,MAAM,CAAC;AAAA,WACL,8BAAU,CACR,MADQ,EAER,gBAFQ,EAGR,eAHQ,EAIR,WAJQ,EAKR,uBALQ,EAMR,UANQ,CAAV,CADK;AAAA,GAAD,CAAN,CASEe,OATF,CASU,0DATV;AAUD,CAtBC,CAAF;AAwBAhB,EAAE,CAAC,0DAAD,EAA6D,YAAM;AACnEC,EAAAA,MAAM,CAAC;AAAA,WACL,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,IAA3B,EAAiC,uBAAjC,EAA0D,UAA1D,CAAV,CADK;AAAA,GAAD,CAAN,CAEEe,OAFF,CAEU,gEAFV;AAGD,CAJC,CAAF;AAMAhB,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/CC,EAAAA,MAAM,CACJ,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,iBAA3B,EAA8C,oBAA9C,CAAV,CADI,CAAN,CAEEC,aAFF,CAEgB;AACdG,IAAAA,OAAO,EAAE,IADK;AAEdU,IAAAA,GAAG,EAAE,gCAFS;AAGdH,IAAAA,YAAY,EAAE;AAHA,GAFhB;AAOD,CARC,CAAF;AAUAZ,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9CC,EAAAA,MAAM,CACJ,8BAAU,CAAC,MAAD,EAAS,gBAAT,EAA2B,iBAA3B,EAA8C,wBAA9C,CAAV,CADI,CAAN,CAEEC,aAFF,CAEgB;AACdG,IAAAA,OAAO,EAAE,IADK;AAEdU,IAAAA,GAAG,EAAE,oCAFS;AAGdH,IAAAA,YAAY,EAAE;AAHA,GAFhB;AAOD,CARC,CAAF;AAUAZ,EAAE,CAAC,sDAAD,EAAyD,YAAM;AAC/DC,EAAAA,MAAM,CACJ,8BAAU,CACR,MADQ,EAER,gBAFQ,EAGR,iBAHQ,EAIR,0CAJQ,CAAV,CADI,CAAN,CAOEC,aAPF,CAOgB;AACdG,IAAAA,OAAO,EAAE,IADK;AAEdU,IAAAA,GAAG,EAAE,0CAFS;AAGdH,IAAAA,YAAY,EAAE;AAHA,GAPhB;AAYD,CAbC,CAAF;AAeAM,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BlB,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC9B,QAAMmB,IAAI,GAAG,+BAAW,yBAAX,EAAsC,IAAtC,EAA4C,QAA5C,CAAb;AACAlB,IAAAA,MAAM,CAACkB,IAAD,CAAN,CAAaC,IAAb,CAAkB,MAAlB;AACD,GAHC,CAAF;AAIApB,EAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAM;AAC7B,QAAMmB,IAAI,GAAG,+BAAW,6BAAX,EAA0C,IAA1C,EAAgD,QAAhD,CAAb;AACAlB,IAAAA,MAAM,CAACkB,IAAD,CAAN,CAAaC,IAAb,CAAkB,MAAlB;AACD,GAHC,CAAF;AAIApB,EAAAA,EAAE,CAAC,gBAAD,EAAmB,YAAM;AACzB,QAAMmB,IAAI,GAAG,+BAAW,6BAAX,EAA0C,IAA1C,EAAgD,QAAhD,CAAb;AACAlB,IAAAA,MAAM,CAACkB,IAAD,CAAN,CAAaC,IAAb,CAAkB,MAAlB;AACD,GAHC,CAAF;AAIApB,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAM;AAC/B,QAAMmB,IAAI,GAAG,+BAAW,8BAAX,EAA2C,IAA3C,EAAiD,QAAjD,CAAb;AACAlB,IAAAA,MAAM,CAACkB,IAAD,CAAN,CAAaC,IAAb,CAAkB,MAAlB;AACD,GAHC,CAAF;AAKApB,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAClC,QAAMmB,IAAI,GAAG,+BACX,4HADW,EAEX,IAFW,EAGX,QAHW,CAAb;AAKAlB,IAAAA,MAAM,CAACkB,IAAD,CAAN,CAAaC,IAAb,CAAkB,MAAlB;AACD,GAPC,CAAF;AAQD,CA1BO,CAAR","sourcesContent":["import { parseArgv, findOption } from './chromatic-test';\n\nlet origConsole;\nbeforeAll(() => {\n  origConsole = global.console;\n  global.console = {\n    log: jest.fn(),\n  };\n});\nafterAll(() => {\n  global.console = origConsole;\n});\n\njest.mock('../assets/environment', () => ({\n  CHROMATIC_CREATE_TUNNEL: true,\n  CHROMATIC_APP_CODE: 'env-code',\n}));\n\njest.mock('jsonfile', () => ({\n  readFileSync: () => ({\n    scripts: {\n      storybook: 'start-storybook -p 1337',\n      otherStorybook: 'start-storybook -p 7070',\n      notStorybook: 'lint',\n      'build-storybook': 'build-storybook',\n      otherBuildStorybook: 'build-storybook',\n    },\n  }),\n}));\n\nprocess.env.CHROMATIC_APP_CODE = 'test';\n\nit('sets reasonable defaults', () => {\n  expect(parseArgv(['node', 'chromatic-test', '--app-code', 'cli-code'])).toMatchObject({\n    appCode: 'cli-code',\n    buildScriptName: 'build-storybook',\n    noStart: true,\n    fromCI: false,\n    autoAcceptChanges: undefined,\n    exitZeroOnChanges: undefined,\n    interactive: true,\n    verbose: false,\n    createTunnel: true,\n    originalArgv: ['node', 'chromatic-test', '--app-code', 'cli-code'],\n  });\n});\n\nit('picks up app-code from environment', () => {\n  expect(parseArgv(['node', 'chromatic-test'])).toMatchObject({\n    appCode: 'env-code',\n  });\n});\n\nit('allows you to override defaults for boolean options', () => {\n  expect(\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--ci',\n      '--do-not-start',\n      '--auto-accept-changes',\n      '--exit-zero-on-changes',\n      '--debug',\n      '--no-interactive',\n    ])\n  ).toMatchObject({\n    noStart: true,\n    fromCI: true,\n    autoAcceptChanges: true,\n    exitZeroOnChanges: true,\n    verbose: true,\n    interactive: false,\n    createTunnel: true,\n  });\n});\n\nit('picks up default start script', () => {\n  expect(parseArgv(['node', 'chromatic-test', '-s'])).toMatchObject({\n    scriptName: 'storybook',\n    url: 'http://localhost:1337/iframe.html',\n    noStart: false,\n  });\n});\n\nit('allows you to specify alternate build script', () => {\n  expect(\n    parseArgv(['node', 'chromatic-test', '--build-script-name', 'otherBuildStorybook'])\n  ).toMatchObject({\n    buildScriptName: 'otherBuildStorybook',\n  });\n});\n\nit('allows you to specify alternate script, still picks up port', () => {\n  expect(parseArgv(['node', 'chromatic-test', '--script-name', 'otherStorybook'])).toMatchObject({\n    scriptName: 'otherStorybook',\n    url: 'http://localhost:7070/iframe.html',\n    noStart: false,\n  });\n});\n\nit('allows you to specify alternate script, that does not start storybook, if you set port', () => {\n  expect(\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--script-name',\n      'notStorybook',\n      '--storybook-port',\n      '6060',\n    ])\n  ).toMatchObject({\n    scriptName: 'notStorybook',\n    url: 'http://localhost:6060/iframe.html',\n  });\n});\n\nit('throws if you try to specify a script name that is not a storybook, if you do NOT set port', () => {\n  expect(() => parseArgv(['node', 'chromatic-test', '--script-name', 'notStorybook'])).toThrow(\n    /must pass a port/\n  );\n});\n\nit('allows you to specify alternate command if you set port', () => {\n  expect(\n    parseArgv(['node', 'chromatic-test', '--exec', 'storybook-command', '--storybook-port', '6060'])\n  ).toMatchObject({\n    exec: 'storybook-command',\n    url: 'http://localhost:6060/iframe.html',\n  });\n});\n\nit('throws if you try to specify a command name, if you do NOT set port', () => {\n  expect(() => parseArgv(['node', 'chromatic-test', '--exec', 'storybook-command'])).toThrow(\n    /must pass a port/\n  );\n});\n\nit('throws if you try to pass a script or command name and a url', () => {\n  expect(() =>\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--exec',\n      'storybook-command',\n      '--storybook-url',\n      'http://foo.bar',\n    ])\n  ).toThrow(/Can only use one of --exec, --storybook-url/);\n\n  expect(() =>\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--script-name',\n      'storybook',\n      '--storybook-url',\n      'http://foo.bar',\n    ])\n  ).toThrow(/Can only use one of --script-name, --storybook-url/);\n});\n\nit('throws if you try to pass a script or command name and a build script', () => {\n  expect(() => parseArgv(['node', 'chromatic-test', '--exec', 'storybook-command', '-b'])).toThrow(\n    /Can only use one of --build-script-name, --exec/\n  );\n\n  expect(() => parseArgv(['node', 'chromatic-test', '--script-name', 'storybook', '-b'])).toThrow(\n    /Can only use one of --build-script-name, --script-name/\n  );\n});\n\nit('throws if you try to pass a script or command name and a directory', () => {\n  expect(() =>\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--exec',\n      'storybook-command',\n      '--storybook-build-dir',\n      '/tmp/dir',\n    ])\n  ).toThrow(/Can only use one of --exec, --storybook-build-dir/);\n\n  expect(() =>\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--script-name',\n      'storybook',\n      '--storybook-build-dir',\n      '/tmp/dir',\n    ])\n  ).toThrow(/Can only use one of --script-name, --storybook-build-dir/);\n});\n\nit('throws if you try to pass a build script and a directory', () => {\n  expect(() =>\n    parseArgv(['node', 'chromatic-test', '-b', '--storybook-build-dir', '/tmp/dir'])\n  ).toThrow(/Can only use one of --build-script-name, --storybook-build-dir/);\n});\n\nit('allows you to set a URL without path', () => {\n  expect(\n    parseArgv(['node', 'chromatic-test', '--storybook-url', 'https://google.com'])\n  ).toMatchObject({\n    noStart: true,\n    url: 'https://google.com/iframe.html',\n    createTunnel: false,\n  });\n});\n\nit('allows you to set a URL with a path', () => {\n  expect(\n    parseArgv(['node', 'chromatic-test', '--storybook-url', 'https://google.com/foo'])\n  ).toMatchObject({\n    noStart: true,\n    url: 'https://google.com/foo/iframe.html',\n    createTunnel: false,\n  });\n});\n\nit('allows you to set a URL with iframe.html already set', () => {\n  expect(\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--storybook-url',\n      'https://google.com/iframe.html?param=foo',\n    ])\n  ).toMatchObject({\n    noStart: true,\n    url: 'https://google.com/iframe.html?param=foo',\n    createTunnel: false,\n  });\n});\n\ndescribe('findOption', () => {\n  it('handles short names', () => {\n    const port = findOption('start-storybook -p 9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n  it('handles long names', () => {\n    const port = findOption('start-storybook --port 9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n  it('handles equals', () => {\n    const port = findOption('start-storybook --port=9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n  it('handles double space', () => {\n    const port = findOption('start-storybook --port  9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n\n  it('handles complex scripts', () => {\n    const port = findOption(\n      \"node verify-node-version.js && concurrently --raw --kill-others 'yarn relay --watch' 'start-storybook -s ./public -p 9001'\",\n      '-p',\n      '--port'\n    );\n    expect(port).toBe('9001');\n  });\n});\n"],"file":"chromatic-test.test.js"}