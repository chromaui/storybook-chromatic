{"version":3,"sources":["../../src/bin/chromatic-test.test.js"],"names":["jest","mock","CHROMATIC_CREATE_TUNNEL","CHROMATIC_APP_CODE","readFileSync","scripts","storybook","otherStorybook","notStorybook","process","env","it","expect","toMatchObject","appCode","scriptName","url","noStart","fromCI","autoAcceptChanges","undefined","exitZeroOnChanges","interactive","verbose","createTunnel","originalArgv","toThrow","commandName","describe","port","toBe"],"mappings":"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","sourcesContent":["import { parseArgv, findOption } from './chromatic-test';\n\njest.mock('../assets/environment', () => ({\n  CHROMATIC_CREATE_TUNNEL: true,\n  CHROMATIC_APP_CODE: 'env-code',\n}));\n\njest.mock('jsonfile', () => ({\n  readFileSync: () => ({\n    scripts: {\n      storybook: 'start-storybook -p 1337',\n      otherStorybook: 'start-storybook -p 7070',\n      notStorybook: 'lint',\n    },\n  }),\n}));\n\nprocess.env.CHROMATIC_APP_CODE = 'test';\n\nit('sets reasonable defaults', () => {\n  expect(parseArgv(['node', 'chromatic-test', '--app-code', 'cli-code'])).toMatchObject({\n    appCode: 'cli-code',\n    scriptName: 'storybook',\n    url: 'http://localhost:1337/iframe.html',\n    noStart: false,\n    fromCI: false,\n    autoAcceptChanges: undefined,\n    exitZeroOnChanges: undefined,\n    interactive: true,\n    verbose: false,\n    createTunnel: true,\n    originalArgv: ['node', 'chromatic-test', '--app-code', 'cli-code'],\n  });\n});\n\nit('picks up app-code from environment', () => {\n  expect(parseArgv(['node', 'chromatic-test'])).toMatchObject({\n    appCode: 'env-code',\n  });\n});\n\nit('allows you to override defaults for boolean options', () => {\n  expect(\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--ci',\n      '--do-not-start',\n      '--auto-accept-changes',\n      '--exit-zero-on-changes',\n      '--debug',\n      '--no-interactive',\n    ])\n  ).toMatchObject({\n    noStart: true,\n    fromCI: true,\n    autoAcceptChanges: true,\n    exitZeroOnChanges: true,\n    verbose: true,\n    interactive: false,\n    createTunnel: true,\n  });\n});\n\nit('allows you to specify alternate script, still picks up port', () => {\n  expect(parseArgv(['node', 'chromatic-test', '--script-name', 'otherStorybook'])).toMatchObject({\n    scriptName: 'otherStorybook',\n    url: 'http://localhost:7070/iframe.html',\n  });\n});\n\nit('allows you to specify alternate script, that does not start storybook, if you set port', () => {\n  expect(\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--script-name',\n      'notStorybook',\n      '--storybook-port',\n      '6060',\n    ])\n  ).toMatchObject({\n    scriptName: 'notStorybook',\n    url: 'http://localhost:6060/iframe.html',\n  });\n});\n\nit('throws if you try to specify a script name that is not a storybook, if you do NOT set port', () => {\n  expect(() => parseArgv(['node', 'chromatic-test', '--script-name', 'notStorybook'])).toThrow(\n    /must pass a port/\n  );\n});\n\nit('allows you to specify alternate command if you set port', () => {\n  expect(\n    parseArgv(['node', 'chromatic-test', '--exec', 'storybook-command', '--storybook-port', '6060'])\n  ).toMatchObject({\n    commandName: 'storybook-command',\n    url: 'http://localhost:6060/iframe.html',\n  });\n});\n\nit('throws if you try to specify a command name, if you do NOT set port', () => {\n  expect(() => parseArgv(['node', 'chromatic-test', '--exec', 'storybook-command'])).toThrow(\n    /must pass a port/\n  );\n});\n\nit('throws if you try to pass a script or command name and a url', () => {\n  expect(() =>\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--exec',\n      'storybook-command',\n      '--storybook-url',\n      'http://foo.bar',\n    ])\n  ).toThrow(/Cannot use --exec with --storybook-url/);\n\n  expect(() =>\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--script-name',\n      'storybook',\n      '--storybook-url',\n      'http://foo.bar',\n    ])\n  ).toThrow(/Cannot use --scriptName with --storybook-url/);\n});\n\nit('allows you to set a URL without path', () => {\n  expect(\n    parseArgv(['node', 'chromatic-test', '--storybook-url', 'https://google.com'])\n  ).toMatchObject({\n    noStart: true,\n    url: 'https://google.com/iframe.html',\n    createTunnel: false,\n  });\n});\n\nit('allows you to set a URL with a path', () => {\n  expect(\n    parseArgv(['node', 'chromatic-test', '--storybook-url', 'https://google.com/foo'])\n  ).toMatchObject({\n    noStart: true,\n    url: 'https://google.com/foo/iframe.html',\n    createTunnel: false,\n  });\n});\n\nit('allows you to set a URL with iframe.html already set', () => {\n  expect(\n    parseArgv([\n      'node',\n      'chromatic-test',\n      '--storybook-url',\n      'https://google.com/iframe.html?param=foo',\n    ])\n  ).toMatchObject({\n    noStart: true,\n    url: 'https://google.com/iframe.html?param=foo',\n    createTunnel: false,\n  });\n});\n\ndescribe('findOption', () => {\n  it('handles short names', () => {\n    const port = findOption('start-storybook -p 9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n  it('handles long names', () => {\n    const port = findOption('start-storybook --port 9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n  it('handles equals', () => {\n    const port = findOption('start-storybook --port=9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n  it('handles double space', () => {\n    const port = findOption('start-storybook --port  9001', '-p', '--port');\n    expect(port).toBe('9001');\n  });\n\n  it('handles complex scripts', () => {\n    const port = findOption(\n      \"node verify-node-version.js && concurrently --raw --kill-others 'yarn relay --watch' 'start-storybook -s ./public -p 9001'\",\n      '-p',\n      '--port'\n    );\n    expect(port).toBe('9001');\n  });\n});\n"],"file":"chromatic-test.test.js"}