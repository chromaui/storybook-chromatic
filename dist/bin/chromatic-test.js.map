{"version":3,"sources":["../../src/bin/chromatic-test.js"],"names":["process","env","NODE_ENV","findOption","storybookScript","shortName","longName","parts","split","index","indexOf","parseArgv","argv","commander","Command","option","parse","commanderOptions","config","appCode","CHROMATIC_APP_CODE","scriptName","commandName","exec","noStart","doNotStart","port","storybookPort","url","storybookUrl","dirname","storybookBuildDir","only","list","fromCI","ci","autoAcceptChanges","exitZeroOnChanges","ignoreLastBuildOnBranch","interactive","verbose","debug","createTunnel","CHROMATIC_CREATE_TUNNEL","originalArgv","packageJson","path","resolve","Error","scripts","console","log","parsedUrl","suffix","pathname","endsWith","format","executeTest","sessionId","exitCode","exit","error","length","map","e","message","require","main","module"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport { Command } from 'commander';\nimport path from 'path';\nimport { readFileSync } from 'jsonfile';\nimport { parse } from 'url';\nimport { v4 as uuid } from 'uuid';\n\nimport runTest from '../tester';\nimport { CHROMATIC_CREATE_TUNNEL, CHROMATIC_APP_CODE } from '../assets/environment';\n\n// Ensure NODE_ENV is set\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'test';\n\n// This is not exactly clever but it works most of the time\nexport function findOption(storybookScript, shortName, longName) {\n  const parts = storybookScript.split(/[\\s='\"]+/);\n  let index = parts.indexOf(longName);\n  if (index === -1) {\n    index = parts.indexOf(shortName);\n  }\n  if (index === -1) {\n    return null;\n  }\n  return parts[index + 1];\n}\n\nexport function parseArgv(argv) {\n  const commander = new Command()\n    .option('-a, --app-code <code>', 'the code for your app, get from chromaticqa.com')\n\n    .option('-s, --script-name <name>', 'The npm script that starts your storybook [storybook]')\n    .option('-e, --exec <command>', 'Alternatively, a full command to run to start your storybook.')\n    .option(\n      '-S, --do-not-start',\n      \"Don't attempt to start; use if your storybook is already running\"\n    )\n\n    .option(\n      '-p, --storybook-port <port>',\n      'What port is your Storybook running on (auto detected from -s, if set)?'\n    )\n    .option(\n      '-u, --storybook-url <url>',\n      'Storybook is already running at (external) url (implies -S)'\n    )\n    .option(\n      '-d, --storybook-build-dir <dirname>',\n      'Provide a directory with your built storybook (implies -S)'\n    )\n\n    .option('--ci', 'This build is running on CI, non-interactively (alternatively, pass CI=true)')\n    .option(\n      '--auto-accept-changes [branch]',\n      'Accept any (non-error) changes or new stories for this build [only for <branch> if specified]'\n    )\n    .option(\n      '--exit-zero-on-changes [branch]',\n      \"Use a 0 exit code if changes are detected (i.e. don't stop the build) [only for <branch> if specified]\"\n    )\n    .option(\n      '--ignore-last-build-on-branch [branch]',\n      'Do not use the last build on this branch as a baseline if it is no longer in history (i.e. branch was rebased) [only for <branch> if specified]'\n    )\n    .option('--no-interactive', 'Do not prompt for package.json changes')\n\n    .option(\n      '--only <component:story>',\n      'Only run a single story or a glob-style subset of stories (for debugging purposes)'\n    )\n    .option('--list', 'List available stories (for debugging purposes)')\n    .option('--debug', 'Output more debugging information')\n\n    // We keep this for back compat it does nothing (ie. it is the default)\n    .option('--storybook-addon', '(deprecated) use the storybook addon')\n    .parse(argv);\n\n  const commanderOptions = {\n    config: commander.config,\n    appCode: commander.appCode || CHROMATIC_APP_CODE,\n    scriptName: commander.scriptName,\n    commandName: commander.exec,\n    noStart: !!commander.doNotStart,\n    port: commander.storybookPort,\n    url: commander.storybookUrl,\n    dirname: commander.storybookBuildDir,\n    only: commander.only,\n    list: commander.list,\n    fromCI: !!commander.ci,\n    autoAcceptChanges: commander.autoAcceptChanges,\n    exitZeroOnChanges: commander.exitZeroOnChanges,\n    ignoreLastBuildOnBranch: commander.ignoreLastBuildOnBranch,\n    interactive: !!commander.interactive,\n    verbose: !!commander.debug,\n    createTunnel: !commander.storybookUrl && CHROMATIC_CREATE_TUNNEL !== 'false',\n    originalArgv: argv,\n  };\n\n  const packageJson = readFileSync(path.resolve('./package.json'));\n  const { commandName } = commanderOptions;\n  // eslint-disable-next-line prefer-const\n  let { port, url, dirname, noStart, scriptName } = commanderOptions;\n\n  if (scriptName && commandName) {\n    throw new Error('Cannot use both --scriptName and --commandName');\n  }\n\n  if (url || dirname) {\n    if (scriptName || commandName) {\n      throw new Error(\n        `Cannot use ${scriptName ? `--scriptName` : `--exec`} with ${\n          url ? '--storybook-url' : '--storybook-directory'\n        }, it implies --do-not-start`\n      );\n    }\n\n    if (url && dirname) {\n      throw new Error(`Cannot use both --storybook-url and --storybook-directory`);\n    }\n\n    noStart = true;\n  } else {\n    if (commandName) {\n      if (!port) {\n        throw new Error(`You must pass a port with the --storybook-port option when using --exec.`);\n      }\n      // If you don't provide a port or we need to start the command, let's look it up\n    } else if (!noStart || !port) {\n      scriptName = scriptName || 'storybook';\n      const storybookScript = packageJson.scripts && packageJson.scripts[scriptName];\n\n      if (!storybookScript) {\n        throw new Error(\n          `Chromatic Tester: Didn't find a script called '${scriptName}' in your \\`package.json\\`.\\n` +\n            'Make sure you set the `--script-name` option to the value of the npm script that starts your storybook'\n        );\n      }\n\n      port = port || findOption(storybookScript, '-p', '--port');\n      if (!port) {\n        throw new Error(\n          `Didn't detect a port in your '${scriptName}' script. You must pass a port with the --storybook-port option.`\n        );\n      }\n\n      // eslint-disable-next-line no-console\n      console.log(\n        `Chromatic Tester: Detected '${scriptName}' script, running with inferred options:\n    --script-name=${scriptName} --storybook-port=${port}\n  Override any of the above if they were inferred incorrectly.\n  `\n      );\n    }\n\n    url = `http://localhost:${port}`;\n  }\n\n  if (dirname) {\n    return { ...commanderOptions, noStart: true, dirname };\n  }\n\n  const parsedUrl = parse(url);\n  const suffix = 'iframe.html';\n  if (!parsedUrl.pathname.endsWith(suffix)) {\n    if (!parsedUrl.pathname.endsWith('/')) {\n      parsedUrl.pathname += '/';\n    }\n    parsedUrl.pathname += suffix;\n  }\n\n  return { ...commanderOptions, noStart, url: parsedUrl.format(), scriptName };\n}\n\nexport async function executeTest(argv) {\n  const sessionId = uuid();\n  try {\n    const exitCode = await runTest({\n      ...parseArgv(argv),\n      sessionId,\n    });\n    process.exit(exitCode);\n  } catch (error) {\n    console.error(\n      `**Chromatic build failed. Please note the session id: '${sessionId}' and contact support@hichroma.com -or- open a support ticket at https://chromaticqa.com**\\n`\n    );\n    if (error.length) {\n      // eslint-disable-next-line no-console\n      // This is a GraphQL Error, our server is reasonable\n      error.map(e => console.error(e.message));\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n    console.log();\n    // Not sure what exit code to use but this can mean error.\n    process.exit(255);\n  }\n}\n\n// Normal usage, outside of test\nif (require.main === module) {\n  executeTest(process.argv);\n}\n"],"file":"chromatic-test.js"}