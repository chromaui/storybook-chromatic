{"version":3,"sources":["../../src/bin/chromatic-test.js"],"names":["process","env","NODE_ENV","findOption","storybookScript","shortName","longName","parts","split","index","indexOf","parseArgv","argv","commander","Command","option","parse","commanderOptions","config","appCode","CHROMATIC_APP_CODE","CHROMA_APP_CODE","buildScriptName","scriptName","exec","noStart","doNotStart","port","storybookPort","storybookUrl","storybookBuildDir","only","list","fromCI","ci","autoAcceptChanges","exitZeroOnChanges","ignoreLastBuildOnBranch","preserveMissingSpecs","preserveMissing","interactive","verbose","debug","createTunnel","CHROMATIC_CREATE_TUNNEL","originalArgv","packageJson","path","resolve","singularCommands","filter","name","length","Error","map","n","join","serve","buildScript","scripts","console","log","parsedUrl","suffix","pathname","endsWith","url","format","executeTest","sessionId","exitCode","exit","error","e","message","require","main","module"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport { Command } from 'commander';\nimport path from 'path';\nimport { readFileSync } from 'jsonfile';\nimport { parse } from 'url';\nimport { v4 as uuid } from 'uuid';\nimport paramCase from 'param-case';\n\nimport runTest from '../tester';\nimport {\n  CHROMATIC_CREATE_TUNNEL,\n  CHROMATIC_APP_CODE,\n  CHROMA_APP_CODE,\n} from '../assets/environment';\n\n// Ensure NODE_ENV is set\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'test';\n\n// This is not exactly clever but it works most of the time\nexport function findOption(storybookScript, shortName, longName) {\n  const parts = storybookScript.split(/[\\s='\"]+/);\n  let index = parts.indexOf(longName);\n  if (index === -1) {\n    index = parts.indexOf(shortName);\n  }\n  if (index === -1) {\n    return null;\n  }\n  return parts[index + 1];\n}\n\nexport function parseArgv(argv) {\n  const commander = new Command()\n    .option('-a, --app-code <code>', 'the code for your app, get from chromaticqa.com')\n\n    .option(\n      '-b, --build-script-name [name]',\n      'The npm script that builds your storybook [build-storybook]'\n    )\n    .option(\n      '-d, --storybook-build-dir <dirname>',\n      \"Provide a directory with your built storybook; use if you've already built your storybook\"\n    )\n\n    .option('-s, --script-name [name]', 'The npm script that starts your storybook [storybook]')\n    .option('-e, --exec <command>', 'Alternatively, a full command to run to start your storybook.')\n    .option(\n      '-S, --do-not-start',\n      \"Don't attempt to start or build; use if your storybook is already running\"\n    )\n\n    .option(\n      '-p, --storybook-port <port>',\n      'What port is your Storybook running on (auto detected from -s, if set)?'\n    )\n    .option(\n      '-u, --storybook-url <url>',\n      'Storybook is already running at (external) url (implies -S)'\n    )\n\n    .option('--ci', 'This build is running on CI, non-interactively (alternatively, pass CI=true)')\n    .option(\n      '--auto-accept-changes [branch]',\n      'Accept any (non-error) changes or new stories for this build [only for <branch> if specified]'\n    )\n    .option(\n      '--exit-zero-on-changes [branch]',\n      \"Use a 0 exit code if changes are detected (i.e. don't stop the build) [only for <branch> if specified]\"\n    )\n    .option(\n      '--ignore-last-build-on-branch [branch]',\n      'Do not use the last build on this branch as a baseline if it is no longer in history (i.e. branch was rebased) [only for <branch> if specified]'\n    )\n    .option(\n      '--preserve-missing',\n      'Treat missing stories as unchanged (as opposed to deleted) when comparing to the baseline'\n    )\n    .option('--no-interactive', 'Do not prompt for package.json changes')\n\n    .option(\n      '--only <component:story>',\n      'Only run a single story or a glob-style subset of stories (for debugging purposes)'\n    )\n    .option('--list', 'List available stories (for debugging purposes)')\n    .option('--debug', 'Output more debugging information')\n\n    // We keep this for back compat it does nothing (ie. it is the default)\n    .option('--storybook-addon', '(deprecated) use the storybook addon')\n    .parse(argv);\n\n  const commanderOptions = {\n    config: commander.config,\n    appCode: commander.appCode || CHROMATIC_APP_CODE || CHROMA_APP_CODE,\n    buildScriptName: commander.buildScriptName,\n    scriptName: commander.scriptName,\n    exec: commander.exec,\n    noStart: !!commander.doNotStart,\n    port: commander.storybookPort,\n    storybookUrl: commander.storybookUrl,\n    storybookBuildDir: commander.storybookBuildDir,\n    only: commander.only,\n    list: commander.list,\n    fromCI: !!commander.ci,\n    autoAcceptChanges: commander.autoAcceptChanges,\n    exitZeroOnChanges: commander.exitZeroOnChanges,\n    ignoreLastBuildOnBranch: commander.ignoreLastBuildOnBranch,\n    preserveMissingSpecs: commander.preserveMissing,\n    interactive: !!commander.interactive,\n    verbose: !!commander.debug,\n    createTunnel: !commander.storybookUrl && CHROMATIC_CREATE_TUNNEL !== 'false',\n    originalArgv: argv,\n  };\n\n  const packageJson = readFileSync(path.resolve('./package.json'));\n  const { storybookBuildDir, exec } = commanderOptions;\n  let { port, storybookUrl, noStart, scriptName, buildScriptName } = commanderOptions;\n\n  // We can only have one of these arguments\n  const singularCommands = [\n    'buildScriptName',\n    'scriptName',\n    'exec',\n    'storybookUrl',\n    'storybookBuildDir',\n  ].filter(name => !!commanderOptions[name]);\n  if (singularCommands.length > 1) {\n    throw new Error(\n      `Can only use one of ${singularCommands.map(n => `--${paramCase(n)}`).join(', ')}`\n    );\n  }\n\n  // Do we serve or build?\n  const serve = !!scriptName || exec || noStart || storybookUrl || port;\n\n  if (!serve) {\n    if (storybookBuildDir) {\n      return { ...commanderOptions, noStart: true };\n    }\n\n    buildScriptName = typeof buildScriptName === 'string' ? buildScriptName : 'build-storybook';\n    const buildScript = packageJson.scripts && packageJson.scripts[buildScriptName];\n    if (!buildScript) {\n      throw new Error(\n        `Chromatic Tester: Didn't find a script called '${buildScriptName}' in your \\`package.json\\`.\\n` +\n          'Make sure you set the `--build-script-name` option to the value of the npm script that builds your storybook'\n      );\n    }\n\n    return { ...commanderOptions, noStart: true, buildScriptName };\n  }\n\n  if (storybookUrl) {\n    noStart = true;\n  } else {\n    if (exec) {\n      if (!port) {\n        throw new Error(`You must pass a port with the --storybook-port option when using --exec.`);\n      }\n      // If you don't provide a port or we need to start the command, let's look it up\n    } else if (!noStart || !port) {\n      scriptName = typeof scriptName === 'string' ? scriptName : 'storybook';\n      const storybookScript = packageJson.scripts && packageJson.scripts[scriptName];\n\n      if (!storybookScript) {\n        throw new Error(\n          `Chromatic Tester: Didn't find a script called '${scriptName}' in your \\`package.json\\`.\\n` +\n            'Make sure you set the `--script-name` option to the value of the npm script that starts your storybook'\n        );\n      }\n\n      port = port || findOption(storybookScript, '-p', '--port');\n      if (!port) {\n        throw new Error(\n          `Didn't detect a port in your '${scriptName}' script. You must pass a port with the --storybook-port option.`\n        );\n      }\n\n      // eslint-disable-next-line no-console\n      console.log(\n        `Chromatic Tester: Detected '${scriptName}' script, running with inferred options:\n    --script-name=${scriptName} --storybook-port=${port}\n  Override any of the above if they were inferred incorrectly.\n  `\n      );\n    }\n\n    storybookUrl = `http://localhost:${port}`;\n  }\n\n  const parsedUrl = parse(storybookUrl);\n  const suffix = 'iframe.html';\n  if (!parsedUrl.pathname.endsWith(suffix)) {\n    if (!parsedUrl.pathname.endsWith('/')) {\n      parsedUrl.pathname += '/';\n    }\n    parsedUrl.pathname += suffix;\n  }\n\n  return { ...commanderOptions, noStart, url: parsedUrl.format(), scriptName };\n}\n\nexport async function executeTest(argv) {\n  const sessionId = uuid();\n  try {\n    const exitCode = await runTest({\n      ...parseArgv(argv),\n      sessionId,\n    });\n    process.exit(exitCode);\n  } catch (error) {\n    console.error(\n      `**Chromatic build failed. Please note the session id: '${sessionId}' and contact support@hichroma.com -or- open a support ticket at https://chromaticqa.com**\\n`\n    );\n    if (error.length) {\n      // eslint-disable-next-line no-console\n      // This is a GraphQL Error, our server is reasonable\n      error.map(e => console.error(e.message));\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n    console.log();\n    // Not sure what exit code to use but this can mean error.\n    process.exit(255);\n  }\n}\n\n// Normal usage, outside of test\nif (require.main === module) {\n  executeTest(process.argv);\n}\n"],"file":"chromatic-test.js"}